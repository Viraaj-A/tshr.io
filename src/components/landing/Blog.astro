---
import Highlights from "@/components/work/Highlights.astro";
import EntriesTwo from "@/components/blog/EntriesTwo.astro";
import { getCollection } from "astro:content";

import { fetchParagraphPosts } from '@/data/paragraphxyz_api.js';
const posts = await fetchParagraphPosts();

---
<section class="overflow-hidden relative">
  <div class="bg-white 2xl:max-w-7xl mx-auto">
    <div class="px-8 py-24 mx-auto max-w-6xl md:px-16">
      <div class="grid items-end gap-4 lg:grid-cols-3">
        <div class="lg:col-span-2">
          <div class="relative max-w-xs">
            <div
              class="absolute inset-0 flex items-center"
              aria-hidden="true">
              <div class="w-full border-t border-green-300"></div>
            </div>
            <div class="relative flex justify-start">
              <span class="font-furore bg-white pr-2 text-sm text-green-500 font-medium"
                >Latest articles</span
              >
            </div>
          </div>
          <h1
            class="text-4xl tracking-tight font-display text-green-800 lg:text-5xl mt-12 text-balance">
            From the blog
          </h1>
          <p class="text-green-500 text-2xl mt-8 font-display text-balance">
            Read our latest articles on projects and practical guides to accessible AI technology.
          </p>
        </div>
        <a
          href="https://paragraph.xyz/@tshr.io"
          class="relative group overflow-hidden rounded-md h-12 px-4 bg-green-200 duration-300">
          <div
            aria-hidden="true"
            class="transition duration-300 group-hover:-translate-y-12 text-green-700 font-medium">
            <div class="h-12 flex items-center">
              <span>See all articles</span>
            </div>
            <div class="h-12 flex items-center justify-between w-full">
              <span>Now </span>
              <span aria-hidden="true">â†’</span>
            </div>
          </div>
        </a>
      </div>
      <!-- Marquee Container -->
      <div class="overflow-hidden group mt-12" id="blog-posts">
        <div class="flex space-x-16 animate-marquee group-hover:[animation-play-state:paused]" 
        style="animation-duration: 20s;">
          {[...Array(6)].map(() => (
            posts.map((post) => (
              <a 
                href={`https://paragraph.xyz/@tshr.io/${post.slug}`} 
                class="block hover:opacity-75 min-w-[300px] max-w-[300px]"
              >
                <div class="space-y-4">
                  <h3 class="text-2xl font-bold text-green-800">{post.title}</h3>
                  <p class="text-green-600">{post.subtitle}</p>
                  <p class="text-sm text-gray-500">
                    {new Date(post.publishedAt).toLocaleDateString()}
                  </p>
                </div>
              </a>
            ))
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  async function refreshPosts() {
    try {
      const response = await fetch('/api/paragraph-posts');
      const data = await response.json();
      
      if (!data.posts?.length) return; // Don't update if no posts

      const postsContainer = document.getElementById('blog-posts');
      if (!postsContainer) return;

      // Only update if we have new content
      const newPostsHTML = [...Array(6)].map(() => 
        data.posts.map(post => `
          <a href="${post.url}" class="your-existing-classes">
            <!-- Your existing post template -->
          </a>
        `).join('')
      ).join('');

      postsContainer.querySelector('.flex').innerHTML = newPostsHTML;
    } catch (error) {
      console.error('Error refreshing posts:', error);
    }
  }

  // Refresh posts when client lands on the page
  document.addEventListener('DOMContentLoaded', refreshPosts);
</script>